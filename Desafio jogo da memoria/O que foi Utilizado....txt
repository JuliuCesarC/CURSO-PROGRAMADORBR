Dentro do desafio do Jogo da Memória, temos algumas funções novas, e algumas funções que ja foi mostrado anteriormente, porém muito dessas funções são utilizadas de maneira muito diferente. 
	Abaixo temos as funções utilizadas em ordem:

-ARRAY.forEach( (parâmetro) => { } )
	A função forEach pega cada item do array e joga para o 'parâmetro', e dentro da arrow function podemos trabalhar esses itens. Só pode ser utilizada em um array.

-ELEMENTO.classList.
	A propriedade classList serve para acessar o atributo 'class' do elemento html, dessa forma podemos adicionar uma classe com o 'classList.add("novaClasse")' e remover uma classe com o 'classList.remove("novaClasse")'.

-ELEMENTO.dataset.
	A propriedade dataset serve para criar um atributo personalisado dentro do elemento html, exemplo:
ELEMENTO.dataset.Nome = "Jão"; 
Agora dentro do elemento temos o atributo 'data-Nome="Jão"', que pode ser lido/alterado com o dataset. Ainda podemos ter outros 'data-set' dentro do mesmo elemento.

-ELEMENTO.addEventListener('', function)
	O método addEventListener já foi visto anteriormente, porém ele possui uma característica que foi explorada nesse Desafio. Quando adicionamos um evento que ativa uma função, as informações do elemento são enviadas para a função e podemos acessar essas informações com o 'this' mesmo que a função não tenha setado algum parametro, exemplo:
ELEMENTO.addEventListener('click', fazAlgo)
function fazAlgo(){
   if(this.id == '123'){....}
}
Se o elemento possuir ID podemos acessar com o 'this.id', caso o elemento tenha outros atributos, também podemos acessar eles.